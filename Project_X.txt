To build a website, you'll need to learn several key technologies and skills. Here's a basic list to get you started:

1. **HTML (Hypertext Markup Language):**
   - HTML is the foundation of web development. It's used to create the structure and content of web pages.

2. **CSS (Cascading Style Sheets):**
   - CSS is used to style the HTML elements. It controls the layout, colors, fonts, and overall visual appearance of a website.

3. **JavaScript:**
   - JavaScript is a programming language that allows you to add interactivity and dynamic features to your website. It's essential for creating things like sliders, form validation, and interactive menus.

4. **Basic Graphic Design:**
   - Understanding basic design principles will help you create visually appealing websites. This includes knowledge of color theory, typography, and layout.

5. **Responsive Design:**
   - Learn how to design and code websites that adapt and look good on various devices and screen sizes (e.g., desktops, tablets, smartphones).

6. **Basic SEO (Search Engine Optimization):**
   - Understanding the basics of SEO will help your website rank better in search engine results. This includes knowledge of meta tags, keyword optimization, and site structure.

7. **Version Control (e.g., Git):**
   - Version control systems help you manage and track changes to your code. Git is a widely used version control system.

8. **Web Hosting and Domain Management:**
   - Familiarize yourself with how websites are hosted on servers and how domain names are registered and linked to your site.

9. **CMS (Content Management System):**
   - Optionally, learn how to use a CMS like WordPress, Joomla, or Drupal. These platforms can simplify the process of building and managing websites.

10. **Basic Command Line Usage:**
    - Knowing your way around the command line can be useful for tasks like setting up a local development environment or deploying your website.

11. **Web Development Frameworks (Optional):**
    - Once you're comfortable with the basics, you might want to explore web development frameworks like Bootstrap, React, Angular, or Vue.js. These can streamline the development process.

12. **Back-End Development (Optional):**
    - If you want to create dynamic websites with features like user authentication, databases, and server-side logic, you'll need to learn a back-end programming language like Python, Ruby, PHP, or Node.js, and a corresponding framework like Django, Ruby on Rails, Laravel, or Express.js.

Remember, practice and hands-on experience are crucial in web development. You can start by building small projects and gradually work your way up to more complex websites.

There are plenty of online resources available, including tutorials, courses, and forums where you can seek help and connect with other developers. Remember to be patient with yourself, as learning web development can take time and practice.